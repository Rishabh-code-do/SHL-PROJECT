{"ast":null,"code":"var _jsxFileName = \"/Users/rjmac/Desktop/SHL PROJECT/frontend/src/SlidePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SlidingPanel from 'react-sliding-side-panel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlidePanel = () => {\n  _s();\n  const [openPanel, setOpenPanel] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SlidingPanel, {\n      type: 'left',\n      isOpen: openPanel,\n      size: 30,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"My Panel Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenPanel(false),\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_s(SlidePanel, \"rBJ0JifKsy2AMNZPSDcs/roXH3k=\");\n_c = SlidePanel;\nexport default SlidePanel;\nvar _c;\n$RefreshReg$(_c, \"SlidePanel\");","map":{"version":3,"names":["React","useState","SlidingPanel","jsxDEV","_jsxDEV","SlidePanel","_s","openPanel","setOpenPanel","children","type","isOpen","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/rjmac/Desktop/SHL PROJECT/frontend/src/SlidePanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SlidingPanel from 'react-sliding-side-panel';\n \nconst SlidePanel = () => {\n  const [openPanel, setOpenPanel] = useState(true);\n  return (\n    <div>\n      <SlidingPanel\n        type={'left'}\n        isOpen={openPanel}\n        size={30}>\n        <div>\n          <div>My Panel Content</div>\n          <button onClick={() => setOpenPanel(false)}>close</button>\n        </div>\n      </SlidingPanel>\n    </div>\n  );\n};\n \nexport default SlidePanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,oBACEG,OAAA;IAAAK,QAAA,eACEL,OAAA,CAACF,YAAY;MACXQ,IAAI,EAAE,MAAO;MACbC,MAAM,EAAEJ,SAAU;MAClBK,IAAI,EAAE,EAAG;MAAAH,QAAA,eACTL,OAAA;QAAAK,QAAA,gBACEL,OAAA;UAAAK,QAAA,EAAK;QAAgB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3BZ,OAAA;UAAQa,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAAC,KAAK,CAAE;UAAAC,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACV,EAAA,CAfID,UAAU;AAAAa,EAAA,GAAVb,UAAU;AAiBhB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}